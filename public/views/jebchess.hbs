<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Jebchess</title>
    <meta name="viewport" content="width=5px, user-scalable=yes, initial-scale=0.5"/>
    <link rel="stylesheet" href="./styles/css?name=chesscss"/>
    <link rel="stylesheet" href="./styles/css?name=cm"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>
<body>
    <h1>
        Welcome to Jebchess!
    </h1>
    <br>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.0.js"></script>
<div class="table-wrap">
    <div style="" class="board inner" id="board"></div>
    <div class="inner" id="moveList" style="float:left;">
        <table id="table"></table>
    </div>
</div>
<pre>
</pre>
<div id="output"></div>
<!--suppress JSUnresolvedFunction -->
<script type="module">
    import {INPUT_EVENT_TYPE, COLOR, Chessboard, MARKER_TYPE} from "./styles/css?name=chb"

    const chess = new Chess()
    
    
    
    function updateMoveList(history) {
        // get the reference for the body
        var body = document.getElementById("moveList");

          // creates a <table> element and a <tbody> element
          var tbl = document.getElementById("table");
          body.removeChild(body.lastChild)
          tbl = document.createElement("table")
          var tblBody = document.createElement("tbody");
        
          // creating all cells
          for (var i = 0; i < history.length; i+=2) {
            // creates a table row
            var row = document.createElement("tr");
        
            for (var j = 0; j < 3; j++) {
              // Create a <td> element and a text node, make the text
              // node the contents of the <td>, and put the <td> at
              // the end of the table row
              var cell = document.createElement("td");
              let tbltext = ""
              if (j === 0) {
                  tbltext = "" + (i/2 + 1) + "."
              }
              else{
                  tbltext += history[i+j-1]
              }
              var cellText = document.createTextNode(tbltext);
              if (j != 0){
                  cell.className = "table table-move"
              }
              else{
                  cell.className = "table table-movenumber"
              }
              cell.appendChild(cellText);
              row.appendChild(cell);
            }
        
            // add the row to the end of the table body
            tblBody.appendChild(row);
    }
        
          // put the <tbody> in the <table>
          tbl.appendChild(tblBody);
          // appends <table> into <body>
          body.appendChild(tbl);
          // sets the border attribute of tbl to 2;
          tbl.setAttribute("border", "2");
        }

    
    
    
    function inputHandler(event) {
        console.log("event", event)
        event.chessboard.removeMarkers(undefined, MARKER_TYPE.dot)
        if (event.type === INPUT_EVENT_TYPE.moveStart) {
            const moves = chess.moves({square: event.square, verbose: true});
            for (const move of moves) {
                event.chessboard.addMarker(move.to, MARKER_TYPE.dot)
            }
            return moves.length > 0
        } else if (event.type === INPUT_EVENT_TYPE.moveDone) {
            const move = {from: event.squareFrom, to: event.squareTo}
            const result = chess.move(move)
            if (result) {
                event.chessboard.disableMoveInput()
                event.chessboard.setPosition(chess.fen())
                updateMoveList(chess.history())
                const possibleMoves = chess.moves({verbose: true})
                if (possibleMoves.length > 0) { //the url below should be ai1 for candidate or ai2 for best
                    $.get('https://jeb-chess.sites.tjhsst.edu/ai2?fen='+chess.fen()+"&t=.1", function(data, status){
                        var dat = data
                    
                    //for random moves
                    // const randomIndex = Math.floor(Math.random() * possibleMoves.length)
                    // const randomMove = possibleMoves[randomIndex]
                        setTimeout(() => { // smoother with 500ms delay
                            // chess.move({from: randomMove.from, to: randomMove.to})
                            chess.move(dat, {sloppy: true})
                            event.chessboard.enableMoveInput(inputHandler, COLOR.white)
                            event.chessboard.setPosition(chess.fen())
                            updateMoveList(chess.history())
                        }, 500)
                    })
                }
            } else {
                console.warn("invalid move", move)
            }
            return result
        }
    }

    const board = new Chessboard(document.getElementById("board"), {
        position: chess.fen(),
        sprite: {url: "./styles/css?name=staunty"},
        style: {moveMarker: MARKER_TYPE.square, hoverMarker: undefined, aspectRation:.5},
        responsive: true,
        orientation: COLOR.white
    })
    board.enableMoveInput(inputHandler, COLOR.white)
    
    jQuery(document).ready(function($) {
        $(".table-movenumber").click(function() {
            history = chess.history()
            console.log("Made it here")
            let m = $(this).val().split(".")[0]
            chess.reset()
            for(var a = 0; a < (+m*2); a++){
                chess.move(history[a])
            }
            updateMoveList(chess.history())
        });
    });
</script>
</body>
</html>